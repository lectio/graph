// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type Content interface {
	IsContent()
}

type ContentCollection interface {
	IsContentCollection()
}

type ContentSource interface {
	IsContentSource()
}

type Link interface {
	IsLink()
}

type Property interface {
	IsProperty()
}

type APISource struct {
	Name        NameText `json:"name"`
	APIEndpoint URLText  `json:"apiEndpoint"`
}

func (APISource) IsContentSource() {}

type ContentBodySettings struct {
	AllowFrontmatter          bool   `json:"allowFrontmatter"`
	FrontMatterPropertyPrefix string `json:"frontMatterPropertyPrefix"`
}

type ContentSettings struct {
	Title   ContentTitleSettings   `json:"title"`
	Summary ContentSummarySettings `json:"summary"`
	Body    ContentBodySettings    `json:"body"`
}

type ContentSummarySettings struct {
	UseFirstSentenceOfBody        bool `json:"useFirstSentenceOfBody"`
	UseFirstSentenceOfBodyIfEmpty bool `json:"useFirstSentenceOfBodyIfEmpty"`
}

type ContentTitleSettings struct {
	RemovePipedSuffix         bool `json:"removePipedSuffix"`
	WarnAboutPipedSuffix      bool `json:"warnAboutPipedSuffix"`
	RemoveHyphenatedSuffix    bool `json:"removeHyphenatedSuffix"`
	WarnAboutHyphenatedSuffix bool `json:"warnAboutHyphenatedSuffix"`
}

type HTTPClientSettings struct {
	UserAgent string          `json:"userAgent"`
	Timeout   TimeoutDuration `json:"timeout"`
}

type HarvestedLink struct {
	ID         string             `json:"id"`
	Resource   string             `json:"resource"`
	Title      ContentTitleText   `json:"title"`
	Summary    ContentSummaryText `json:"summary"`
	Body       ContentBodyText    `json:"body"`
	Properties *Properties        `json:"properties"`
}

func (HarvestedLink) IsContent() {}
func (HarvestedLink) IsLink()    {}

type HarvestedLinks struct {
	ID      string          `json:"id"`
	Source  ContentSource   `json:"source"`
	Content []HarvestedLink `json:"content"`
}

func (HarvestedLinks) IsContentCollection() {}

type LinkHarvesterSettings struct {
	IgnoreURLsRegExprs        []*RegularExpression `json:"ignoreURLsRegExprs"`
	RemoveParamsFromURLsRegEx []*RegularExpression `json:"removeParamsFromURLsRegEx"`
	FollowHTMLRedirects       bool                 `json:"followHTMLRedirects"`
}

type MessageProperty struct {
	Name    string `json:"name"`
	Message string `json:"message"`
}

func (MessageProperty) IsProperty() {}

type NumericProperty struct {
	Name  string `json:"name"`
	Value int    `json:"value"`
}

func (NumericProperty) IsProperty() {}

type Properties struct {
	Property Property   `json:"property"`
	All      []Property `json:"all"`
}

type SettingsBundle struct {
	Name       SettingsBundleName    `json:"name"`
	Harvester  LinkHarvesterSettings `json:"harvester"`
	Content    ContentSettings       `json:"content"`
	HTTPClient HTTPClientSettings    `json:"httpClient"`
}

type TextProperty struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

func (TextProperty) IsProperty() {}
