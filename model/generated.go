// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type Content interface {
	IsContent()
}

type ContentCollection interface {
	IsContentCollection()
}

type ContentSource interface {
	IsContentSource()
}

type Link interface {
	IsLink()
}

type CuratedLink struct {
	ID      string             `json:"id"`
	Title   ContentTitleText   `json:"title"`
	Summary ContentSummaryText `json:"summary"`
	Body    ContentBodyText    `json:"body"`
	URL     string             `json:"url"`
}

func (CuratedLink) IsContent() {}
func (CuratedLink) IsLink()    {}

type DropmarkCollection struct {
	ID      string         `json:"id"`
	Source  DropmarkSource `json:"source"`
	Content []CuratedLink  `json:"content"`
}

func (DropmarkCollection) IsContentCollection() {}

type DropmarkSource struct {
	Name        NameText `json:"name"`
	APIEndpoint URLText  `json:"apiEndpoint"`
}

func (DropmarkSource) IsContentSource() {}

type HTTPClientSettings struct {
	UserAgent string          `json:"userAgent"`
	Timeout   TimeoutDuration `json:"timeout"`
}

type LinkFinalizerSettings struct {
	IgnoreURLsRegExprs        []*RegularExpression `json:"ignoreURLsRegExprs"`
	RemoveParamsFromURLsRegEx []*RegularExpression `json:"removeParamsFromURLsRegEx"`
	FollowHTMLRedirects       bool                 `json:"followHTMLRedirects"`
}

type SettingsBundle struct {
	Name          SettingsBundleName    `json:"name"`
	LinkFinalizer LinkFinalizerSettings `json:"linkFinalizer"`
	HTTPClient    HTTPClientSettings    `json:"httpClient"`
}
