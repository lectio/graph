scalar NameText
scalar SmallText
scalar MediumText
scalar LargeText
scalar ExtraLargeText
scalar InterpolatedMessage

scalar Error

scalar URLText
scalar URL

scalar Document
scalar File
scalar FileNameOnly
scalar FilePathAndName
scalar DirectoryPath

interface Link {
    id: ID!
    originalURLText: URLText!
	finalURL: URL
    isValid: Boolean!
}

interface ContentSource {
    name: NameText!
}

interface APISource {
    apiEndpoint: URLText!
}

interface Content {
    id: ID!
}

interface ContentCollection {
    id: ID!
    source: ContentSource
    content: [Content]
}

scalar ContentTitleText
scalar ContentSummaryText
scalar ContentBodyText

type BookmarkLink implements Link {
    id: ID!
    originalURLText: URLText!
	finalURL: URL
    isValid: Boolean!
}

type Bookmark implements Content {
    id: ID!
    link: BookmarkLink!
    title: ContentTitleText!
    summary: ContentSummaryText!
    body: ContentBodyText!
    properties: Properties
    scores: LinkScores
}

type BookmarksAPISource implements ContentSource & APISource {
    name: NameText!
    apiEndpoint: URLText!
}

type Bookmarks implements ContentCollection {
    id: ID!
    source: BookmarksAPISource!
    content: [Bookmark!]
    activities: Activities!
    properties: Properties
}

type Query {
    defaultSettingsBundle : SettingsBundle
    settingsBundle(name: SettingsBundleName!) : SettingsBundle
    source(source : URLText!) : ContentSource
    bookmarks(source : URLText!, settingsBundle: SettingsBundleName! = "DEFAULT") : Bookmarks
}

type Mutation {
    executePipeline(input: ExecutePipelineInput!): PipelineExecution!
    executeBookmarksToMarkdownPipeline(input: BookmarksToMarkdownPipelineInput!): BookmarksToMarkdownPipelineExecution!
}